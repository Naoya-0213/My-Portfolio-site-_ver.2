/* 速度とイージングはここで集中管理。JSで --acc-duration を上書き可能 */
:root {
  --acc-duration: 0.5s;
  --acc-ease: cubic-bezier(0.22, 1, 0.36, 1); // しっとり系
}

@media (prefers-reduced-motion: reduce) {
  :root {
    --acc-duration: 0s;
  }
}

.accordion {
  width: 100%;
  margin-top: 20px;
}

/* 既存ボタンはそのまま。transformのホバー演出も維持 */
.accordion__button {
  width: 100%;
  background: none;
  border: none;
  font-weight: bold;
  font-size: 16px;
  color: #795549;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 20px;
  cursor: pointer;
  transition: color transform 0.7s;

  &:hover {
    // transform: scale(1.05);
    color: #795549;
  }
}

/* プラス/マイナスのアイコン */
.accordion__icon {
  width: 40px;
  height: 40px;
  border-radius: 20px;
  border: 1px solid #795549;
  position: relative;

  &::before,
  &::after {
    content: "";
    position: absolute;
    top: calc(20px - 2px);
    left: calc(10px - 1px);
    background: #795549;
    width: 20px;
    height: 1px;
  }

  /* 縦線 */
  &::after {
    transform: rotate(90deg);
    transition: transform 0.3s;
  }

  &.is_open {
    &::after {
      transform: rotate(0deg); // マイナス化
    }
  }
}

/* ★ ここが重要：heightでアニメ。初期は0で非表示。 */
.accordion__content {
  height: 0;
  overflow: hidden;
  transition: height var(--acc-duration) var(--acc-ease);
  /* 余白が欲しいときは padding を内側で付けるか、子に付ける */
}

/* 開いた状態。heightはJSでscrollHeightにし、完了後autoに解放するので
   ここでは見た目用のフックだけ（必要ならクラスで余白などを付与） */
.accordion__content.open {
  /* 例: 開いた時だけ上に余白 */
}
